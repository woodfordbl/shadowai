// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.usageDataObject = exports.testManifestFilePath = exports.testFallbackAuthDialogFilePath = exports.testEnvDataFilePath = exports.getSecretCommandPath = exports.addSecretCommandPath = exports.manifestFilePath = exports.getInstalledAppsPath = exports.fallbackAuthDialogJavascriptFilePath = exports.fallbackAuthDialogTypescriptFilePath = exports.envDataFilePath = exports.azRestSetSigninAudienceCommandPath = exports.azRestSetIdentifierUriCommmandPath = exports.azRestGetTenantRolesPath = exports.azRestGetTenantAdminMembershipCommandPath = exports.azRestGetOrganizationDetailsCommandPath = exports.azRestAppCreateCommandPath = exports.azRestAddSecretCommandPath = exports.azRestAddTenantReplyUrlsCommandPath = exports.azRestAddTenantOutlookReplyUrlsCommandPath = exports.azCliInstallCommandPath = void 0;
const path = require("path");
const usageData = require("office-addin-usage-data");
/* global process, __dirname */
// File path defaults
exports.azCliInstallCommandPath = path.resolve(`${__dirname}/scripts/azCliInstallCmd.ps1`);
exports.azRestAddTenantOutlookReplyUrlsCommandPath = path.resolve(`${__dirname}/scripts/azRestAddTenantOutlookReplyUrls.txt`);
exports.azRestAddTenantReplyUrlsCommandPath = path.resolve(`${__dirname}/scripts/azRestAddTenantReplyUrls.txt`);
exports.azRestAddSecretCommandPath = path.resolve(`${__dirname}/scripts/azAddSecretCmd.txt`);
exports.azRestAppCreateCommandPath = path.resolve(`${__dirname}/scripts/azRestAppCreateCmd.txt`);
exports.azRestGetOrganizationDetailsCommandPath = path.resolve(`${__dirname}/scripts/azGetOrganizationDetails.txt`);
exports.azRestGetTenantAdminMembershipCommandPath = path.resolve(`${__dirname}/scripts/azRestGetTenantAdminMembership.txt`);
exports.azRestGetTenantRolesPath = path.resolve(`${__dirname}/scripts/azRestGetTenantRoles.txt`);
exports.azRestSetIdentifierUriCommmandPath = path.resolve(`${__dirname}/scripts/azRestSetIdentifierUri.txt`);
exports.azRestSetSigninAudienceCommandPath = path.resolve(`${__dirname}/scripts/azSetSignInAudienceCmd.txt`);
exports.envDataFilePath = path.resolve(`${process.cwd()}/.ENV`);
exports.fallbackAuthDialogTypescriptFilePath = path.resolve(`${process.cwd()}/src/helpers/fallbackAuthDialog.ts`);
exports.fallbackAuthDialogJavascriptFilePath = path.resolve(`${process.cwd()}/src/helpers/fallbackAuthDialog.js`);
exports.getInstalledAppsPath = path.resolve(`${__dirname}/scripts/getInstalledApps.ps1`);
exports.manifestFilePath = path.resolve(`${process.cwd()}/manifest.xml`);
exports.addSecretCommandPath = path.resolve(`${__dirname}/scripts/addAppSecret.ps1`);
exports.getSecretCommandPath = path.resolve(`${__dirname}/scripts/getAppSecret.ps1`);
exports.testEnvDataFilePath = path.resolve(`${process.cwd()}/test/test-env`);
exports.testFallbackAuthDialogFilePath = path.resolve(`${process.cwd()}/test/test-fallbackauthdialog`);
exports.testManifestFilePath = path.resolve(`${process.cwd()}/test/test-manifest.xml`);
// Usage data defaults
exports.usageDataObject = new usageData.OfficeAddinUsageData({
    projectName: "office-addin-sso",
    instrumentationKey: usageData.instrumentationKeyForOfficeAddinCLITools,
    raisePrompt: false,
});
//# sourceMappingURL=defaults.js.map