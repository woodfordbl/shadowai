// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See full license in the root of the repo.
/*
    This file provides the provides functionality to get Microsoft Graph data.
*/
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getGraphData = void 0;
const odata_helper_1 = require("./odata-helper");
const domain = "graph.microsoft.com";
const versionURLsegment = "/v1.0";
function getGraphData(accessToken, apiURLsegment, queryParamsSegment) {
    return __awaiter(this, void 0, void 0, function* () {
        try {
            const oData = yield odata_helper_1.ODataHelper.getData(accessToken, domain, apiURLsegment, versionURLsegment, queryParamsSegment);
            return Promise.resolve(oData);
        }
        catch (err) {
            return Promise.reject(`Error get Graph data. \n${err}`);
        }
    });
}
exports.getGraphData = getGraphData;
//# sourceMappingURL=msgraph-helper.js.map